apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-grafana
  namespace: observability
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      serviceAccountName: prometheus-grafana
      containers:
      - name: grafana
        image: docker.io/grafana/grafana:11.5.2
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              key: admin-user
              name: prometheus-grafana
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: prometheus-grafana
        - name: GF_PATHS_DATA
          value: /var/lib/grafana/
        - name: GF_PATHS_LOGS
          value: /var/log/grafana
        - name: GF_PATHS_PLUGINS
          value: /var/lib/grafana/plugins
        - name: GF_PATHS_PROVISIONING
          value: /etc/grafana/provisioning
        volumeMounts:
        - name: storage
          mountPath: /var/lib/grafana
        - name: config
          mountPath: /etc/grafana/grafana.ini
          subPath: grafana.ini
        - name: dashboards
          mountPath: /tmp/dashboards
        - name: datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: dashboard-provider
          mountPath: /etc/grafana/provisioning/dashboards
          subPath: provider.yaml
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          timeoutSeconds: 30
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: config
        configMap:
          name: prometheus-grafana
      - name: dashboards
        emptyDir: {}
      - name: datasources
        emptyDir: {}
      - name: dashboard-provider
        configMap:
          name: prometheus-grafana-config-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-grafana
  namespace: observability
  labels:
    app.kubernetes.io/name: grafana
spec:
  ports:
  - port: 80
    targetPort: 3000
    name: http
  selector:
    app.kubernetes.io/name: grafana
