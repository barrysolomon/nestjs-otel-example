---
apiVersion: v1
kind: Namespace
metadata:
  name: nestjs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-app
  namespace: nestjs
  labels:
    app: nestjs-app

spec:
  replicas: 1  # Increased replicas for redundancy
  selector:
    matchLabels:
      app: nestjs-app
  template:
    metadata:
      labels:
        app: nestjs-app

    spec:
      containers:
        - name: nestjs-app
          image: <YOUR REPOSITORY>/nest-opentelemetry-example:latest
          imagePullPolicy: Always  # Ensures the latest image is pulled every deployment
          ports:
            - containerPort: 3000
              protocol: TCP

          env:
            - name: PORT
              value: "3000"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP

            # Enables a call to init() to manually initialize the tracer by calling await lumigo.init; in bootstrap.ts
            - name: LUMIGO_MANUAL_INIT
              value: "true"

            - name: LUMIGO_TRACER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: lumigo-secret
                  key: api-key
            - name: LUMIGO_ENABLE_LOGS
              value: "true"
            - name: LUMIGO_LOG_ENDPOINT
              value: "https://logs-ga.lumigo-tracer-edge.golumigo.com/api/logs?token=t_f8f7b905da964eef89261"

            - name: OTEL_SERVICE_NAME
              value: "SimpleNestedService"  
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "https://ga-otlp.lumigo-tracer-edge.golumigo.com"  

          command: ["node"]
          args: ["-r", "@lumigo/opentelemetry", "dist/main.js"]

          resources:
            requests:
              cpu: "256m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
              
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 3000
          #   initialDelaySeconds: 10
          #   periodSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 3000
          #   initialDelaySeconds: 5
          #   periodSeconds: 3
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 3000
      #   fsGroup: 2000
      # restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: nestjs-app-service
  namespace: nestjs
  labels:
    app: nestjs-app
spec:
  selector:
    app: nestjs-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
