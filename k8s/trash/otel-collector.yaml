apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: otel-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector:latest
          ports:
            - containerPort: 4317  # gRPC OTLP port
            - containerPort: 4318  # HTTP OTLP port
          resources:
            requests:
              memory: "1Gi"
              cpu: "200m"
            limits:
              memory: "2Gi"
              cpu: "500m"
          volumeMounts:
            - name: otel-config
              mountPath: /etc/otel/config.yaml
              subPath: config.yaml
          args:
            - "--config=/etc/otel/config.yaml"
            - "--set=service.telemetry.logs.level=debug"
      volumes:
        - name: otel-config
          configMap:
            name: otel-collector-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: observability
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: "0.0.0.0:4317"
            include_metadata: true
            transport: "tcp"
            max_recv_msg_size_mib: 64
            max_concurrent_streams: 1000
            read_buffer_size: 512_000
            write_buffer_size: 512_000
            keepalive:
              server_parameters:
                max_connection_age: 30s
                max_connection_age_grace: 5s
                time: 5s
                timeout: 5s
                max_connection_idle: 10s
              enforcement_policy:
                min_time: 5s
                permit_without_stream: true
          http:
            endpoint: "0.0.0.0:4318"
            cors:
              allowed_origins: ["*"]
            include_metadata: true
            read_timeout: 10s
            write_timeout: 10s
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              static_configs:
                - targets: ['localhost:8888']
              metric_relabel_configs:
                - action: labeldrop
                  regex: ^target_info.*

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1000
      memory_limiter:
        limit_mib: 1000
        spike_limit_mib: 200
        check_interval: 1s

    exporters:
      debug:
        verbosity: detailed
      prometheus:
        endpoint: "0.0.0.0:8889"

    service:
      telemetry:
        logs:
          level: "debug"
          development: true
          encoding: "console"
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [debug]
        metrics:
          receivers: [prometheus]
          processors: [memory_limiter, batch]
          exporters: [prometheus]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [debug]
